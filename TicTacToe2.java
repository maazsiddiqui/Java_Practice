
/**
 * 
 * Create another tic-tac-toe game. This version will be mostly the same as the previous one.
 * However: In the 1st version, the user submitted moves for both X and O. In this version,
 * the user will only be asked the moves for X. Moves for O will be generated by the program.
 * Before making a move for O, the program should check to see if X could win on its next turn,
 * and if so, O should move to block. (Hint: use the method you created in part 1 to test for
 * a win).  Otherwise, O should pick an available square at random. (Use the random function
 * in class Math.
 *  
 * 
 * @author Maaz Siddiqui
 *
 */

import javax.swing.JOptionPane;

public class TicTacToe2 {

	static int turn = 1;

	static char x = 'X';

	static char o = 'O';

	public static void main(String[] args) {

		char [][] board = new char[3][3];

		while (fullcheck(board)) {

			input(board);

			print(board);

		}



	} // end of main

	/**
	 * Won function
	 * 
	 * @param a
	 * @param row
	 * @param col
	 * @return
	 */

	public static boolean won(char[][] a, int row, int col) {

		if (turn > 3) {

			char winner = a[row][col];

			//checking column
			for(int i = 0; i < 3; i++) {

				if(a[row][i] != winner)

					break;

				if(i == 2){

					return true;

				}

			}

			//checking row
			for(int i = 0; i < 3; i++){

				if(a[i][col] != winner)

					break;

				if(i == 2) {

					return true;

				}

			}

			//checking diagonal
			if(row == col) {

				for(int i = 0; i < 3; i++){

					if(a[i][i] != winner)

						break;

					if(i == 2){

						return true;

					}

				}

			}

			//checking other diagonal
			for(int i = 0; i < 3; i++) {

				if(a[i][2 - i] != winner)

					break;

				if(i == 2){

					return true;

				}

			}

			return false;

		}

		else 

			return false;

	}

	/**
	 * Fullcheck function to verify board has empty slots
	 * 
	 * @param a
	 * @return
	 */

	public static boolean fullcheck(char[][] a) {

		for (int r = 0; r < 3; r++) {

			for (int c = 0; c < 3; c++) {

				if (a[r][c] == '\u0000') { 

					return true;

				}	

			}

		}

		print(a);

		System.out.println("Game Drawn");

		System.exit(0);

		return false;

	}

	/**
	 * Input function
	 * 
	 * @param a
	 */

	public static void input(char[][] a) {

		int selectsq = 0;

		if(turn % 2 == 0) {

			for (int i = 0; i < 3; i++) {

				for (int j = 0; j < 3; j++) {

					if (a[i][j] == '\u0000') {

						a[i][j] = x;

						if (won(a, i, j) == true) {

							a[i][j] = o;

							turn++;

							if (won(a, i, j) == true) {

								print(a);

								System.out.println(o + " Wins");

								System.exit(0);

							}

							print(a);

							return;

						}

						else {

							a[i][j] = '\u0000';

						}

					}

				}

			}

			selectsq = (int) ((Math.random() * 9) + 1);

		}	

		else {

			selectsq = Integer.parseInt(JOptionPane.showInputDialog(null, "Pick a square number"));

		}

		switch (selectsq) {

		case 1:
			if (a[0][0] == '\u0000') {

				if (turn % 2 != 0) {

					a[0][0] = x;

					turn++;

				}

				else {

					a[0][0] = o;

					turn++;

				}

				if (won(a, 0, 0) == true) {

					print(a);

					System.out.println(a[0][0] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}

		case 2:
			if (a[0][1] == '\u0000') {

				if (turn % 2 != 0) {

					a[0][1] = x;

					turn++;

				}

				else {

					a[0][1] = o;

					turn++;

				}

				if (won(a, 0, 1) == true) {

					print(a);

					System.out.println(a[0][1] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}	

			else {

				return;

			}

		case 3:
			if (a[0][2] == '\u0000') {

				if (turn % 2 != 0) {

					a[0][2] = x;

					turn++;

				}

				else {

					a[0][2] = o;

					turn++;

				}

				if (won(a, 0, 2) == true) {

					print(a);

					System.out.println(a[0][2] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}	

		case 4:
			if (a[1][0] == '\u0000') {

				if (turn % 2 != 0) {

					a[1][0] = x;

					turn++;

				}

				else {

					a[1][0] = o;

					turn++;

				}

				if (won(a, 1, 0) == true) {

					print(a);

					System.out.println(a[1][0] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}

		case 5:
			if (a[1][1] == '\u0000') {

				if (turn % 2 != 0) {

					a[1][1] = x;

					turn++;

				}

				else {

					a[1][1] = o;

					turn++;

				}

				if (won(a, 1, 1) == true) {

					print(a);

					System.out.println(a[1][1] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}

		case 6:
			if (a[1][2] == '\u0000') {

				if (turn % 2 != 0) {

					a[1][2] = x;

					turn++;

				}

				else {

					a[1][2] = o;

					turn++;

				}

				if (won(a, 1, 2) == true) {

					print(a);

					System.out.println(a[1][2] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}	

		case 7:
			if (a[2][0] == '\u0000') {

				if (turn % 2 != 0) {

					a[2][0] = x;

					turn++;

				}

				else {

					a[2][0] = o;

					turn++;

				}

				if (won(a, 2, 0) == true) {

					print(a);

					System.out.println(a[2][0] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}	

		case 8:
			if (a[2][1] == '\u0000') {

				if (turn % 2 != 0) {

					a[2][1] = x;

					turn++;

				}

				else {

					a[2][1] = o;

					turn++;

				}

				if (won(a, 2, 1) == true) {

					print(a);

					System.out.println(a[2][1] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}	

		case 9:
			if (a[2][2] == '\u0000') {

				if (turn % 2 != 0) {

					a[2][2] = x;

					turn++;

				}

				else {

					a[2][2] = o;

					turn++;

				}

				if (won(a, 2, 2) == true) {

					print(a);

					System.out.println(a[2][2] + " Wins");

					System.exit(0);

				}

				print(a);

				return;

			}

			else {

				return;

			}	

		default:			

			return;

		} // end of switch loop

	} // end of input method


	/**
	 * method to print 2D char array
	 * 
	 * @param a
	 */

	public static void print(char[][] a) {

		for (int r = 0; r < 3; r++) {

			for (int c = 0; c < 3; c++) {

				System.out.print(a[r][c]);

				System.out.print(" ");

			}

			System.out.println();

		}

		System.out.println("-----");

	} // end of print method

} // end of program
